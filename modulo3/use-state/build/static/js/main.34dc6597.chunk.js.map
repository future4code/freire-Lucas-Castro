{"version":3,"sources":["img/favorite.svg","img/favorite-white.svg","img/comment_icon.svg","components/Post/styles.js","components/IconeComContador/IconeComContador.js","components/SecaoComentario/SecaoComentario.js","components/Post/Post.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PostContainer","styled","div","PostHeader","PostFooter","UserPhoto","img","PostPhoto","CommentContainer","IconeContainer","IconeComContador","props","alt","src","icone","onClick","onClickIcone","valorContador","InputComment","input","SecaoComentario","state","inputValue","onChangeComentario","event","setState","target","value","placeholder","this","onChange","enviarComentario","Component","Post","curtido","numeroCurtidas","comentando","numeroComentarios","comentarios","onClickCurtida","onClickComentario","comentario","listaDeComentarios","iconeCurtida","iconeCoracaoPreto","iconeCoracaoBranco","caixaDeComentario","map","fotoUsuario","nomeUsuario","fotoPost","iconeComentario","React","AppContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,ihCCEpC,IAAMC,EAAgBC,IAAOC,IAAV,KAMbC,EAAaF,IAAOC,IAAV,KAOVE,EAAaH,IAAOC,IAAV,KAQVG,EAAYJ,IAAOK,IAAV,KAOTC,EAAYN,IAAOK,IAAV,KAITE,EAAmBP,IAAOC,IAAV,K,iIC/B7B,IAAMO,EAAiBR,IAAOC,IAAV,KAeLQ,MAPf,SAA0BC,GACzB,OAAO,kBAACF,EAAD,KACN,yBAAKG,IAAK,QAASC,IAAKF,EAAMG,MAAOC,QAASJ,EAAMK,eACpD,2BAAIL,EAAMM,iB,6PCXZ,IAAMT,EAAmBP,IAAOC,IAAV,KAMhBgB,EAAejB,IAAOkB,MAAV,KA0BHC,E,2MApBdC,MAAQ,CACPC,WAAY,I,EAGbC,mBAAqB,SAACC,GACrB,EAAKC,SAAS,CAACH,WAAYE,EAAME,OAAOC,S,wEAG/B,IAAD,OACR,OAAO,kBAAC,EAAD,KACN,kBAACT,EAAD,CACCU,YAAa,gBACbD,MAAOE,KAAKR,MAAMC,WAClBQ,SAAUD,KAAKN,qBAEhB,4BAAQR,QAAS,WAAO,EAAKJ,MAAMoB,iBAAiB,EAAKV,MAAMC,cAA/D,e,GAhB2BU,a,mDC8FfC,E,2MAjGbZ,MAAQ,CACNa,SAAS,EACTC,eAAgB,EAChBC,YAAY,EACZC,kBAAmB,EACnBC,YAAa,I,EAGfC,eAAiB,WAGX,EAAKlB,MAAMa,QAGb,EAAKT,SAAS,CACZS,SAAU,EAAKb,MAAMa,QACrBC,eAAgB,EAAKd,MAAMc,eAAiB,IAK9C,EAAKV,SAAS,CACZS,SAAU,EAAKb,MAAMa,QACrBC,eAAgB,EAAKd,MAAMc,eAAiB,K,EAOlDK,kBAAoB,WAClB,EAAKf,SAAS,CACZW,YAAa,EAAKf,MAAMe,c,EAM5BL,iBAAmB,SAACU,GAClB,IAAMC,EAAkB,sBAAO,EAAKrB,MAAMiB,aAAlB,CAA+BG,IAEvD,EAAKhB,SAAS,CACZa,YAAaI,EACbN,YAAY,EACZC,kBAAmB,EAAKhB,MAAMgB,kBAAoB,K,wEAOpD,IAAMM,EAAed,KAAKR,MAAMa,QAAWU,IAAsBC,IAI3DC,EAAoBjB,KAAKR,MAAMe,WAEnC,kBAAC,EAAD,CAAiBL,iBAAkBF,KAAKE,mBAIxCF,KAAKR,MAAMiB,YAAYS,KAAI,SAAAN,GACzB,OACE,kBAACjC,EAAD,KACE,2BAAIiC,OAMZ,OAAO,kBAACzC,EAAD,KACL,kBAACG,EAAD,KACE,kBAACE,EAAD,CAAWQ,IAAKgB,KAAKlB,MAAMqC,YAAapC,IAAK,sBAC7C,2BAAIiB,KAAKlB,MAAMsC,cAGjB,kBAAC1C,EAAD,CAAWM,IAAKgB,KAAKlB,MAAMuC,SAAUtC,IAAK,mBAE1C,kBAACR,EAAD,KACE,kBAAC,EAAD,CACEU,MAAO6B,EACP3B,aAAca,KAAKU,eACnBtB,cAAeY,KAAKR,MAAMc,iBAG5B,kBAAC,EAAD,CACErB,MAAOqC,IACPnC,aAAca,KAAKW,kBACnBvB,cAAeY,KAAKR,MAAMgB,qBAI7BS,O,GA7FYM,IAAMpB,W,wKCNzB,IAAMqB,EAAepD,IAAOC,IAAV,KAmBHoD,MAZf,WACE,OACE,kBAACD,EAAD,KACE,kBAAC,EAAD,CACEJ,YAAa,aACbD,YAAa,iCACbE,SAAU,uCCLEK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.34dc6597.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favorite.4c67d875.svg\";","module.exports = __webpack_public_path__ + \"static/media/favorite-white.042aa417.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment_icon.de299b47.svg\";","import styled from \"styled-components\"\n\nexport const PostContainer = styled.div `\n    border: 1px solid gray;\n    width: 300px;\n    margin-bottom: 10px;\n`\n\nexport const PostHeader = styled.div `\n    height: 40px;\n    display: flex;\n    align-items: center;\n    padding-left: 10px;\n`\n\nexport const PostFooter = styled.div `\n    height: 40px;\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n    justify-content: space-between;\n`\n\nexport const UserPhoto = styled.img`\n    height: 30px;\n    width: 30px;\n    margin-right: 10px;\n    border-radius: 50%;\n`\n\nexport const PostPhoto = styled.img`\n    width: 100%;\n`\n\nexport const CommentContainer = styled.div`\n    margin-left: 10px;\n`","import React from 'react'\nimport styled from \"styled-components\"\n\nconst IconeContainer = styled.div`\n\tdisplay: flex;\n\n\timg {\n\t\tmargin-right: 5px;\n\t}\n`\n\nfunction IconeComContador(props) {\n\treturn <IconeContainer>\n\t\t<img alt={'Icone'} src={props.icone} onClick={props.onClickIcone}/>\n\t\t<p>{props.valorContador}</p>\n\t</ IconeContainer>\n}\n\nexport default IconeComContador","import React, {Component} from 'react'\nimport styled from \"styled-components\"\n\nconst CommentContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 5px;\n`\n\nconst InputComment = styled.input `\n    width: 100%;\n    margin-right: 5px;\n`\n\nclass SecaoComentario extends Component {\n\tstate = {\n\t\tinputValue: \"\",\n\t}\n\n\tonChangeComentario = (event) => {\n\t\tthis.setState({inputValue: event.target.value})\n\t}\n\n\trender() {\n\t\treturn <CommentContainer>\n\t\t\t<InputComment\n\t\t\t\tplaceholder={'Comentário'}\n\t\t\t\tvalue={this.state.inputValue}\n\t\t\t\tonChange={this.onChangeComentario}\n\t\t\t/>\n\t\t\t<button onClick={() => {this.props.enviarComentario(this.state.inputValue)}}>Enviar</button>\n\t\t</CommentContainer>\n\t}\n}\n\nexport default SecaoComentario","import React from 'react'\nimport { PostContainer, PostHeader, UserPhoto, PostPhoto, PostFooter, CommentContainer } from './styles'\n\nimport IconeComContador from '../IconeComContador/IconeComContador'\nimport SecaoComentario from '../SecaoComentario/SecaoComentario'\n\nimport iconeCoracaoPreto from '../../img/favorite.svg'\nimport iconeCoracaoBranco from '../../img/favorite-white.svg'\nimport iconeComentario from '../../img/comment_icon.svg'\n\nclass Post extends React.Component {\n  state = {\n    curtido: false, // usado para a lógica de mudança de cor do coração e o aumento/diminuição do número de curtidas\n    numeroCurtidas: 0, // número de curtidas do post. Varia entre 0 e 1. \n    comentando: false, // usado para a lógica de abrir ou fechar a caixa de comentário\n    numeroComentarios: 0, // número de comentários do post.\n    comentarios: [], // responsável por guardar a lista de comentários feitos no post\n  }\n\n  onClickCurtida = () => {\n    \n    // verifica se, no estado, cutido é true ou false\n    if (this.state.curtido) {\n\n      // se for true, entra nesse caso, e o estado é modificado de acordo com esses comandos:\n      this.setState({\n        curtido: !this.state.curtido,\n        numeroCurtidas: this.state.numeroCurtidas - 1\n      })\n    } else {\n\n      // se for false, entra nesse caso, e o estado é modificado de acordo com esses comandos:\n      this.setState({\n        curtido: !this.state.curtido,\n        numeroCurtidas: this.state.numeroCurtidas + 1\n      })\n    }\n  }\n\n  // método chamado quando o ícone de comentário é clicado. O método apenas muda o valor de \n  // comentando no estado, de true para false ou de false para true.\n  onClickComentario = () => {\n    this.setState({\n      comentando: !this.state.comentando\n    })\n  }\n\n  // recebe como parâmetro um comentário, que vem do componente SecaoComentario. Com esse parâmetro, o método\n  // o inclui na lista de comentários do estado, com a desestruturacao e o this.setState. \n  enviarComentario = (comentario) => {\n    const listaDeComentarios = [...this.state.comentarios, comentario]\n\n    this.setState({\n      comentarios: listaDeComentarios,\n      comentando: false,\n      numeroComentarios: this.state.numeroComentarios + 1\n    })\n  }\n\n  render() {\n    // De acordo com a propriedade curtido do estado, o valor muda entre  iconeCoracaoPreto e o iconeCoracaoBranco, \n    // que estão sendo importados nas linhas 7 e 8, respectivamente. \n    const iconeCurtida = this.state.curtido ? (iconeCoracaoPreto) : (iconeCoracaoBranco)\n\n    // expressão condicional que, de acordo com o valor de comentando no estado, renderiza o componente\n    // SecaoComentario ou o CommentContainer. Esta expressão está sendo chamada no JSX na linha 104\n    const caixaDeComentario = this.state.comentando ? (\n      // Componente com o input e botão de enviar novo comentario. Import dele na linha 5.\n      <SecaoComentario enviarComentario={this.enviarComentario}/>\n    ) : (\n      // Funcao map sendo feita na propriedade comentarios do estado. Ou seja, está sendo pego todos os\n      // comentários do estado para serem renderizados na tela, dentro do componente CommentContainer \n      this.state.comentarios.map(comentario => {\n        return (\n          <CommentContainer>\n            <p>{comentario}</p>\n          </CommentContainer>\n        )\n      })\n    )\n\n    return <PostContainer>\n      <PostHeader>\n        <UserPhoto src={this.props.fotoUsuario} alt={'Imagem do usuario'}/>\n        <p>{this.props.nomeUsuario}</p>\n      </PostHeader>\n\n      <PostPhoto src={this.props.fotoPost} alt={'Imagem do post'}/>\n\n      <PostFooter>\n        <IconeComContador\n          icone={iconeCurtida}\n          onClickIcone={this.onClickCurtida}\n          valorContador={this.state.numeroCurtidas}\n        />\n\n        <IconeComContador\n          icone={iconeComentario}\n          onClickIcone={this.onClickComentario}\n          valorContador={this.state.numeroComentarios}\n        />\n\n      </PostFooter>\n      {caixaDeComentario}\n    </PostContainer>\n  }\n}\n\nexport default Post","import React from 'react';\nimport Post from './components/Post/Post';\nimport styled from \"styled-components\"\n\nconst AppContainer = styled.div `\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`\n\nfunction App() {\n  return (\n    <AppContainer>\n      <Post\n        nomeUsuario={'Usuário'}\n        fotoUsuario={'https://picsum.photos/50/50?=1'}\n        fotoPost={'https://picsum.photos/200/150?=2'}\n      />        \n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
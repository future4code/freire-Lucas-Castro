{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\luvit\\\\Desktop\\\\freire-Lucas-Castro\\\\modulo3\\\\use-state\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\luvit\\\\Desktop\\\\freire-Lucas-Castro\\\\modulo3\\\\use-state\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\luvit\\\\Desktop\\\\freire-Lucas-Castro\\\\modulo3\\\\use-state\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\luvit\\\\Desktop\\\\freire-Lucas-Castro\\\\modulo3\\\\use-state\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\luvit\\\\Desktop\\\\freire-Lucas-Castro\\\\modulo3\\\\use-state\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\luvit\\\\Desktop\\\\freire-Lucas-Castro\\\\modulo3\\\\use-state\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{PostContainer,PostHeader,UserPhoto,PostPhoto,PostFooter,CommentContainer}from'./styles';import IconeComContador from'../IconeComContador/IconeComContador';import SecaoComentario from'../SecaoComentario/SecaoComentario';import iconeCoracaoPreto from\"../../img/favorite.svg\";import iconeCoracaoBranco from\"../../img/favorite-white.svg\";import iconeComentario from\"../../img/comment_icon.svg\";var Post=/*#__PURE__*/function(_React$Component){_inherits(Post,_React$Component);function Post(){var _getPrototypeOf2;var _this;_classCallCheck(this,Post);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Post)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={curtido:false,// usado para a lógica de mudança de cor do coração e o aumento/diminuição do número de curtidas\nnumeroCurtidas:0,// número de curtidas do post. Varia entre 0 e 1. \ncomentando:false,// usado para a lógica de abrir ou fechar a caixa de comentário\nnumeroComentarios:0,// número de comentários do post.\ncomentarios:[]// responsável por guardar a lista de comentários feitos no post\n};_this.onClickCurtida=function(){// verifica se, no estado, cutido é true ou false\nif(_this.state.curtido){// se for true, entra nesse caso, e o estado é modificado de acordo com esses comandos:\n_this.setState({curtido:!_this.state.curtido,numeroCurtidas:_this.state.numeroCurtidas-1});}else{// se for false, entra nesse caso, e o estado é modificado de acordo com esses comandos:\n_this.setState({curtido:!_this.state.curtido,numeroCurtidas:_this.state.numeroCurtidas+1});}};_this.onClickComentario=function(){_this.setState({comentando:!_this.state.comentando});};_this.enviarComentario=function(comentario){var listaDeComentarios=[].concat(_toConsumableArray(_this.state.comentarios),[comentario]);_this.setState({comentarios:listaDeComentarios,comentando:false,numeroComentarios:_this.state.numeroComentarios+1});};return _this;}_createClass(Post,[{key:\"render\",value:function render(){// De acordo com a propriedade curtido do estado, o valor muda entre  iconeCoracaoPreto e o iconeCoracaoBranco, \n// que estão sendo importados nas linhas 7 e 8, respectivamente. \nvar iconeCurtida=this.state.curtido?iconeCoracaoPreto:iconeCoracaoBranco;// expressão condicional que, de acordo com o valor de comentando no estado, renderiza o componente\n// SecaoComentario ou o CommentContainer. Esta expressão está sendo chamada no JSX na linha 104\nvar caixaDeComentario=this.state.comentando?// Componente com o input e botão de enviar novo comentario. Import dele na linha 5.\nReact.createElement(SecaoComentario,{enviarComentario:this.enviarComentario}):// Funcao map sendo feita na propriedade comentarios do estado. Ou seja, está sendo pego todos os\n// comentários do estado para serem renderizados na tela, dentro do componente CommentContainer \nthis.state.comentarios.map(function(comentario){return React.createElement(CommentContainer,null,React.createElement(\"p\",null,comentario));});return React.createElement(PostContainer,null,React.createElement(PostHeader,null,React.createElement(UserPhoto,{src:this.props.fotoUsuario,alt:'Imagem do usuario'}),React.createElement(\"p\",null,this.props.nomeUsuario)),React.createElement(PostPhoto,{src:this.props.fotoPost,alt:'Imagem do post'}),React.createElement(PostFooter,null,React.createElement(IconeComContador,{icone:iconeCurtida,onClickIcone:this.onClickCurtida,valorContador:this.state.numeroCurtidas}),React.createElement(IconeComContador,{icone:iconeComentario,onClickIcone:this.onClickComentario,valorContador:this.state.numeroComentarios})),caixaDeComentario);}}]);return Post;}(React.Component);export default Post;","map":{"version":3,"sources":["C:/Users/luvit/Desktop/freire-Lucas-Castro/modulo3/use-state/src/components/Post/Post.js"],"names":["React","PostContainer","PostHeader","UserPhoto","PostPhoto","PostFooter","CommentContainer","IconeComContador","SecaoComentario","Post","state","curtido","numeroCurtidas","comentando","numeroComentarios","comentarios","onClickCurtida","setState","onClickComentario","enviarComentario","comentario","listaDeComentarios","iconeCurtida","iconeCoracaoPreto","iconeCoracaoBranco","caixaDeComentario","map","props","fotoUsuario","nomeUsuario","fotoPost","iconeComentario","Component"],"mappings":"s6BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,CAAwBC,UAAxB,CAAoCC,SAApC,CAA+CC,SAA/C,CAA0DC,UAA1D,CAAsEC,gBAAtE,KAA8F,UAA9F,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,sCAA7B,CACA,MAAOC,CAAAA,eAAP,KAA4B,oCAA5B,C,8KAMMC,CAAAA,I,mYACJC,K,CAAQ,CACNC,OAAO,CAAE,KADH,CACU;AAChBC,cAAc,CAAE,CAFV,CAEa;AACnBC,UAAU,CAAE,KAHN,CAGa;AACnBC,iBAAiB,CAAE,CAJb,CAIgB;AACtBC,WAAW,CAAE,EAAI;AALX,C,OAQRC,c,CAAiB,UAAM,CAErB;AACA,GAAI,MAAKN,KAAL,CAAWC,OAAf,CAAwB,CAEtB;AACA,MAAKM,QAAL,CAAc,CACZN,OAAO,CAAE,CAAC,MAAKD,KAAL,CAAWC,OADT,CAEZC,cAAc,CAAE,MAAKF,KAAL,CAAWE,cAAX,CAA4B,CAFhC,CAAd,EAID,CAPD,IAOO,CAEL;AACA,MAAKK,QAAL,CAAc,CACZN,OAAO,CAAE,CAAC,MAAKD,KAAL,CAAWC,OADT,CAEZC,cAAc,CAAE,MAAKF,KAAL,CAAWE,cAAX,CAA4B,CAFhC,CAAd,EAID,CACF,C,OAIDM,iB,CAAoB,UAAM,CACxB,MAAKD,QAAL,CAAc,CACZJ,UAAU,CAAE,CAAC,MAAKH,KAAL,CAAWG,UADZ,CAAd,EAGD,C,OAIDM,gB,CAAmB,SAACC,UAAD,CAAgB,CACjC,GAAMC,CAAAA,kBAAkB,8BAAO,MAAKX,KAAL,CAAWK,WAAlB,GAA+BK,UAA/B,EAAxB,CAEA,MAAKH,QAAL,CAAc,CACZF,WAAW,CAAEM,kBADD,CAEZR,UAAU,CAAE,KAFA,CAGZC,iBAAiB,CAAE,MAAKJ,KAAL,CAAWI,iBAAX,CAA+B,CAHtC,CAAd,EAKD,C,uEAEQ,CACP;AACA;AACA,GAAMQ,CAAAA,YAAY,CAAG,KAAKZ,KAAL,CAAWC,OAAX,CAAsBY,iBAAtB,CAA4CC,kBAAjE,CAEA;AACA;AACA,GAAMC,CAAAA,iBAAiB,CAAG,KAAKf,KAAL,CAAWG,UAAX,CACxB;AACA,oBAAC,eAAD,EAAiB,gBAAgB,CAAE,KAAKM,gBAAxC,EAFwB,CAIxB;AACA;AACA,KAAKT,KAAL,CAAWK,WAAX,CAAuBW,GAAvB,CAA2B,SAAAN,UAAU,CAAI,CACvC,MACE,qBAAC,gBAAD,MACE,6BAAIA,UAAJ,CADF,CADF,CAKD,CAND,CANF,CAeA,MAAO,qBAAC,aAAD,MACL,oBAAC,UAAD,MACE,oBAAC,SAAD,EAAW,GAAG,CAAE,KAAKO,KAAL,CAAWC,WAA3B,CAAwC,GAAG,CAAE,mBAA7C,EADF,CAEE,6BAAI,KAAKD,KAAL,CAAWE,WAAf,CAFF,CADK,CAML,oBAAC,SAAD,EAAW,GAAG,CAAE,KAAKF,KAAL,CAAWG,QAA3B,CAAqC,GAAG,CAAE,gBAA1C,EANK,CAQL,oBAAC,UAAD,MACE,oBAAC,gBAAD,EACE,KAAK,CAAER,YADT,CAEE,YAAY,CAAE,KAAKN,cAFrB,CAGE,aAAa,CAAE,KAAKN,KAAL,CAAWE,cAH5B,EADF,CAOE,oBAAC,gBAAD,EACE,KAAK,CAAEmB,eADT,CAEE,YAAY,CAAE,KAAKb,iBAFrB,CAGE,aAAa,CAAE,KAAKR,KAAL,CAAWI,iBAH5B,EAPF,CARK,CAsBJW,iBAtBI,CAAP,CAwBD,C,kBA/FgBzB,KAAK,CAACgC,S,EAkGzB,cAAevB,CAAAA,IAAf","sourcesContent":["import React from 'react'\nimport { PostContainer, PostHeader, UserPhoto, PostPhoto, PostFooter, CommentContainer } from './styles'\n\nimport IconeComContador from '../IconeComContador/IconeComContador'\nimport SecaoComentario from '../SecaoComentario/SecaoComentario'\n\nimport iconeCoracaoPreto from '../../img/favorite.svg'\nimport iconeCoracaoBranco from '../../img/favorite-white.svg'\nimport iconeComentario from '../../img/comment_icon.svg'\n\nclass Post extends React.Component {\n  state = {\n    curtido: false, // usado para a lógica de mudança de cor do coração e o aumento/diminuição do número de curtidas\n    numeroCurtidas: 0, // número de curtidas do post. Varia entre 0 e 1. \n    comentando: false, // usado para a lógica de abrir ou fechar a caixa de comentário\n    numeroComentarios: 0, // número de comentários do post.\n    comentarios: [], // responsável por guardar a lista de comentários feitos no post\n  }\n\n  onClickCurtida = () => {\n    \n    // verifica se, no estado, cutido é true ou false\n    if (this.state.curtido) {\n\n      // se for true, entra nesse caso, e o estado é modificado de acordo com esses comandos:\n      this.setState({\n        curtido: !this.state.curtido,\n        numeroCurtidas: this.state.numeroCurtidas - 1\n      })\n    } else {\n\n      // se for false, entra nesse caso, e o estado é modificado de acordo com esses comandos:\n      this.setState({\n        curtido: !this.state.curtido,\n        numeroCurtidas: this.state.numeroCurtidas + 1\n      })\n    }\n  }\n\n  // método chamado quando o ícone de comentário é clicado. O método apenas muda o valor de \n  // comentando no estado, de true para false ou de false para true.\n  onClickComentario = () => {\n    this.setState({\n      comentando: !this.state.comentando\n    })\n  }\n\n  // recebe como parâmetro um comentário, que vem do componente SecaoComentario. Com esse parâmetro, o método\n  // o inclui na lista de comentários do estado, com a desestruturacao e o this.setState. \n  enviarComentario = (comentario) => {\n    const listaDeComentarios = [...this.state.comentarios, comentario]\n\n    this.setState({\n      comentarios: listaDeComentarios,\n      comentando: false,\n      numeroComentarios: this.state.numeroComentarios + 1\n    })\n  }\n\n  render() {\n    // De acordo com a propriedade curtido do estado, o valor muda entre  iconeCoracaoPreto e o iconeCoracaoBranco, \n    // que estão sendo importados nas linhas 7 e 8, respectivamente. \n    const iconeCurtida = this.state.curtido ? (iconeCoracaoPreto) : (iconeCoracaoBranco)\n\n    // expressão condicional que, de acordo com o valor de comentando no estado, renderiza o componente\n    // SecaoComentario ou o CommentContainer. Esta expressão está sendo chamada no JSX na linha 104\n    const caixaDeComentario = this.state.comentando ? (\n      // Componente com o input e botão de enviar novo comentario. Import dele na linha 5.\n      <SecaoComentario enviarComentario={this.enviarComentario}/>\n    ) : (\n      // Funcao map sendo feita na propriedade comentarios do estado. Ou seja, está sendo pego todos os\n      // comentários do estado para serem renderizados na tela, dentro do componente CommentContainer \n      this.state.comentarios.map(comentario => {\n        return (\n          <CommentContainer>\n            <p>{comentario}</p>\n          </CommentContainer>\n        )\n      })\n    )\n\n    return <PostContainer>\n      <PostHeader>\n        <UserPhoto src={this.props.fotoUsuario} alt={'Imagem do usuario'}/>\n        <p>{this.props.nomeUsuario}</p>\n      </PostHeader>\n\n      <PostPhoto src={this.props.fotoPost} alt={'Imagem do post'}/>\n\n      <PostFooter>\n        <IconeComContador\n          icone={iconeCurtida}\n          onClickIcone={this.onClickCurtida}\n          valorContador={this.state.numeroCurtidas}\n        />\n\n        <IconeComContador\n          icone={iconeComentario}\n          onClickIcone={this.onClickComentario}\n          valorContador={this.state.numeroComentarios}\n        />\n\n      </PostFooter>\n      {caixaDeComentario}\n    </PostContainer>\n  }\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}